set -e # Failfast (broken)

loc=$1 # Create varaibles
pkg=$(basename $loc .jl)
if [ $loc = $pkg ]
then
    loc=\"$loc\"
else
    loc=url=\"$loc\"
fi

install=$(echo 'import Pkg; Pkg.activate("$p", shared=true); Pkg.add($l); using $p: main' | awk '{gsub(/\$p/, p); gsub(/\$l/, l)} 1' p=$pkg l=$loc)

if julia -v
then
    # Julia is installed
    echo "This might take a while." # Ecosystem-wide TTFX issues...
    julia -e "${install}"
else
    # Julia is missing; install it with juliaup (https://github.com/JuliaLang/juliaup)
    # Use manual install b.c. script install is broken (https://github.com/JuliaLang/juliaup/issues/464)
    # expect -c 'spawn bash -c "curl -fsSL https://install.julialang.org | sh"; expect "Proceed"; send -- "\r"; expect eof' || exit 1
    echo "The \`julia\` command is not availible on this systemâ€”installing it now. Feel free to use the default settings."
    curl -fsSL https://install.julialang.org | sh

    echo "Now that Julia is installed, we can install $pkg. This might take a while." # Ecosystem-wide TTFX issues...
    # Julia may not yet be on the path of this shell so we launch with an absolute path
    ~/.julia/juliaup/bin/julialauncher -e "${install}"
fi

# Move from ~ to ~/Desktop so that the script will be more easily located (if possible)
dir=$(pwd)
set +e
if [ $(pwd) = ~ ]
then
cd Desktop
fi
set -e

# Create script
echo '#!/bin/sh\njulia -e '\''import Pkg; Pkg.activate("$p", shared=true); try Pkg.update() catch; println("Warning: update failed") end; using $p: main; main()'\'' $0 $@' | awk '{gsub(/\$p/, p)} 1' p=$pkg>$pkg
chmod +x $pkg

echo "Installation succeeded!"
echo "Double click on the $pkg file to run the program"
echo "$pkg is currently located at $(pwd), but feel free to move it somewhere more convenient"
cd $dir
